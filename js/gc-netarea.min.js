"use strict";const gcNetareaLocales={en:{options:{title:"Net area"},description:{id:"ID",parcel:"Parcel",sdate:"Sensing date"},legend:{uncultivated_area:"uncultivated area",area_under_crops:"area under crops",fraction_under_crops:"fraction under crops"}},de:{options:{title:"Nettofl채che"},description:{id:"Nr",parcel:"Feld",sdate:"Aufnahmedatum"},legend:{uncultivated_area:"unbewirtschaftete Fl채che",area_under_crops:"bewirtschaftete Fl채che",fraction_under_crops:"Anteil bewirtschafteter Fl채che"}}};Vue.component("gc-netarea",{props:{gcWidgetId:{type:String,default:"netarea1",required:!0},gcApikey:{type:String,default:"39553fb7-7f6f-4945-9b84-a4c8745bdbec"},gcHost:{type:String,default:"geocledian.com"},gcProxy:{type:String,default:void 0},gcApiBaseUrl:{type:String,default:"/agknow/api/v4"},gcApiSecure:{type:Boolean,default:!0},gcParcelId:{default:-1},gcSelectedDate:{type:String,default:""},gcMode:{type:String,default:"gauge"},gcAvailableOptions:{type:String,default:"title,description,dateSelector,legend"},gcWidgetCollapsed:{type:Boolean,default:!0},gcLanguage:{type:String,default:"en"},gcLegendPosition:{type:String,default:"inset"},gcWhiteLabel:{type:Boolean,default:!1}},template:'<div :id="gcWidgetId" class="gc-netarea" style="max-width: 18.0rem; min-width: 8rem;">       \n\n              <p :class="[\'gc-options-title\', \'is-size-6\', gcWidgetCollapsed ? \'gc-is-primary\' : \'gc-is-tertiary\']" \n                style="cursor: pointer; margin-bottom: 1em;" \n                v-on:click="toggleNetarea"   \n                v-show="this.availableOptions.includes(\'title\')">\n                {{ $t(\'options.title\') }}\n                <i :class="[gcWidgetCollapsed ? \'\': \'is-active\', \'fas\', \'fa-angle-down\', \'fa-sm\']"></i>\n              </p>\n\n              \x3c!-- widget container --\x3e\n              <div :class="[gcWidgetCollapsed ? \'\': \'is-hidden\']">\n               <div class="is-flex">\n                <div :id="\'desc_\' + gcWidgetId" class="gc-is-tertiary" v-show="this.availableOptions.includes(\'description\')">\n                  <span :id="\'subtitle_\' + gcWidgetId" class="has-text-weight-bold is-size-7">{{ $t(\'description.parcel\') }} {{ $t(\'description.id\') }} :{{this.currentParcelID}}</span><br>\n                  <span :id="\'sdate_\' + gcWidgetId" class="is-size-7" v-if="this.netarea.hasOwnProperty(\'netarea\')">{{ $t(\'description.sdate\') }}:{{this.netarea.netarea.sensing_date}}</span>\n                </div>\n\n                <div class="field-body is-horizontal" style="margin-left: 1em;"\n                    v-show="this.availableOptions.includes(\'dateSelector\')">\n                  <div class="control has-icons-left" style="padding-bottom: 0px; max-width: 7.6rem;">\n                    <input :id="\'inpSdate_\'+this.gcWidgetId" type="text" class="input is-small" placeholder="[YYYY-MM-DD]"\n                      v-model="selectedDate">\n                    <span class="icon is-small is-left">\n                      <i class="fas fa-clock fa-lg"></i>\n                    </span>\n                  </div>\n                </div>\n                </div>\n\n                \x3c!-- watermark --\x3e\n                <div :class="[this.gcWhiteLabel ? \'is-hidden\': \'is-inline-block\', \'is-pulled-right\']"\n                  style="opacity: 0.65;">\n                  <span style="vertical-align: top; font-size: 0.7rem;">powered by</span><br>\n                  <img src="img/logo.png" alt="geo|cledian" style="width: 100px; margin: -10px 0;">\n                </div>\n               \n\n                \x3c!-- watermark message --\x3e\n                <div class="notification gc-api-message" style="position: relative; opacity: 1.0; margin-bottom: 0.5rem; z-index: 1001; font-size: 0.9rem;"\n                  v-show="watermark_msg.length>0" v-html="$t(watermark_msg)  +  \'<br>\' + $t(\'status_msg.support\')">\n                </div>\n      \n                \x3c!-- other api messages --\x3e\n                <div class="notification gc-api-message" v-show="api_err_msg.length > 0" v-html="$t(api_err_msg) +  \'<br>\' + $t(\'status_msg.support\')"></div>\n\n                \n                <div class="chartSpinner spinner" v-show="isloading">\n                  <div class="rect1"></div>\n                  <div class="rect2"></div>\n                  <div class="rect3"></div>\n                  <div class="rect4"></div>\n                  <div class="rect5"></div>\n                </div>\n\n                \x3c!-- v-show directive does not play nice with billboard.js so put it one layer above! --\x3e\n                <div style="position: relative;" v-show="api_err_msg.length==0">\n                  <div v-show="isloading == false">\n                    <div :id="\'chart_\'+gcWidgetId" :class="[\'gc-netarea-chart-\'+this.gcMode]"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- chart --\x3e',data:function(){return{chart:void 0,parcels:[],offset:0,pagingStep:6e3,total_parcel_count:250,netarea:{},inpSdatePicker:void 0,internalSelectedDate:"",api_err_msg:"",watermark_msg:"",isloading:!0}},computed:{apiKey:{get:function(){return this.gcApikey}},apiHost:{get:function(){return this.gcHost}},apiBaseUrl:{get:function(){return this.gcApiBaseUrl}},apiSecure:{get:function(){return this.gcApiSecure}},apiMajorVersion:{get(){return"/agknow/api/v3"===this.apiBaseUrl?3:"/agknow/api/v4"===this.apiBaseUrl?4:void 0}},currentParcelID:{get:function(){return this.gcParcelId}},selectedDate:{get:function(){if(this.gcSelectedDate.length>0){if(this.isDateValid(this.gcSelectedDate))return this.gcSelectedDate}else if(this.isDateValid(this.internalSelectedDate))return this.internalSelectedDate},set:function(value){console.debug("selectedDate - setter: "+value),this.isDateValid(value)&&(this.$root.$emit("queryDateChange",value),this.internalSelectedDate=value)}},availableOptions:{get:function(){return this.gcAvailableOptions.split(",")}},currentLanguage:{get:function(){return this.gcLanguage}}},i18n:{locale:this.currentLanguage,messages:gcNetareaLocales},created:function(){console.debug("netarea! - created()");try{this.changeLanguage()}catch(ex){console.error(ex)}},mounted:function(){this.$root.$on("containerSizeChange",this.containerSizeChange),this.chart=bb.generate({bindto:"#chart_"+this.gcWidgetId,data:{columns:[],type:this.gcMode},legend:{hide:this.availableOptions.includes("legend")?[]:["net area under crops","uncultivated area","fraction under crops"],position:this.gcLegendPosition}}),this.gcParcelId>0&&(this.currentParcelID=this.gcParcelId,this.handleCurrentParcelIDchange()),this.initDatePickers()},watch:{currentParcelID:function(newValue,oldValue){console.debug("event - currentParcelIDChange"),this.handleCurrentParcelIDchange(newValue,oldValue)},selectedDate:function(newValue,oldValue){console.debug("event - sdateChange"),this.isDateValid(this.selectedDate)&&this.getNetarea(this.getCurrentParcel().parcel_id,this.selectedDate)},netarea:{handler:function(newValue,oldValue){console.debug("event - netareaChange"),this.createChartData()},deep:!0},currentLanguage(newValue,oldValue){this.changeLanguage(),this.createChartData(),this.initDatePickers()},gcMode(newValue,oldValue){"gauge"===newValue&&(this.gcLegendPosition="bottom"),this.createChartData()},gcLegendPosition(newValue,oldValue){"inset"===newValue&&"gauge"===this.gcMode&&(this.gcLegendPosition="bottom"),this.createChartData()}},methods:{getApiUrl:function(endpoint){let protocol="http";return this.apiSecure&&(protocol+="s"),this.gcProxy?protocol+"://"+this.gcProxy+this.apiBaseUrl+endpoint:protocol+"://"+this.gcHost+this.apiBaseUrl+endpoint+"?key="+this.apiKey},toggleNetarea:function(){this.gcWidgetCollapsed=!this.gcWidgetCollapsed},containerSizeChange(size){this.chart&&setTimeout(function(){this.chart.resize()}.bind(this),200)},handleCurrentParcelIDchange:function(){console.debug("methods - handleCurrentParcelIDchange"),this.currentParcelID>0&&(this.filterDetailData(),this.getNetarea(this.getCurrentParcel().parcel_id,this.selectedDate))},filterDetailData:function(){console.debug("methods - filterDetailData")},getCurrentParcel:function(){return{parcel_id:this.currentParcelID}},getNetarea:function(parcel_id,sdate){this.api_err_msg="",this.watermark_msg="",this.isloading=!0;const endpoint="/parcels/"+parcel_id+"/netarea";let params="&date="+sdate;console.debug("getNetarea()"),console.debug("GET "+this.getApiUrl(endpoint)+params),this.chart&&this.chart.unload(),axios({method:"GET",url:this.getApiUrl(endpoint)+params}).then(function(response){if(console.debug(response),200===response.status)try{var result=response.data;if(3===this.apiMajorVersion){if("key is not authorized"===result.content||"api key validity expired"===result.content)return this.api_err_msg=result.content,void(this.isloading=!1);result.hasOwnProperty("netarea")&&(this.netarea=result)}4===this.apiMajorVersion&&(this.netarea=result.content)}catch(err){console.error(err),this.api_err_msg=err,this.isloading=!1}else this.api_err_msg=response.data,this.isloading=!1}.bind(this)).catch(err=>{this.api_err_msg=err.response.data,this.isloading=!1})},createChartData:function(){console.debug("createChartData()");let columns=[];if(4===this.apiMajorVersion&&this.netarea){if("pie"==this.gcMode||"donut"==this.gcMode){let uncultivated_area;columns[0]=["area under crops"].concat(this.formatDecimal(this.netarea.net_area,2)),uncultivated_area=this.netarea.fraction>0?this.netarea.fraction*this.netarea.net_area:void 0,columns[1]=["uncultivated area"].concat(this.formatDecimal(uncultivated_area,2))}"gauge"==this.gcMode&&(columns[0]=["fraction under crops"].concat(this.formatDecimal(100*this.netarea.fraction,2))),this.createChart(columns)}},createChart:function(data){console.debug("createChart()"),console.debug(data);let color_options={};"gauge"==this.gcMode&&(color_options={pattern:["#FF0000","#F97600","#F6C600","#60B044"],threshold:{max:100,values:[25,50,75,100]}});let pie_options={},pie_color_options={};"pie"!=this.gcMode&&"donut"!=this.gcMode||(pie_options={label:{format:function(value,ratio,id){return this.formatDecimal(value,1)+" ha"}.bind(this)}},pie_color_options={"area under crops":"#60B044","uncultivated area":"#FF0000"}),console.debug(this.gcMode),this.chart=bb.generate({bindto:"#chart_"+this.gcWidgetId,data:{columns:data,type:this.gcMode,colors:pie_color_options,names:{"uncultivated area":this.$t("legend.uncultivated_area"),"area under crops":this.$t("legend.area_under_crops"),"fraction under crops":this.$t("legend.fraction_under_crops")}},pie:pie_options,color:color_options,transition:{duration:500},legend:{hide:this.availableOptions.includes("legend")?[]:["area under crops","uncultivated area","fraction under crops"],position:this.gcLegendPosition}}),this.chart.load({columns:data,done:function(){this.isloading=!1}.bind(this)})},initDatePickers(){console.debug("initDatePickers()"),this.inpSdatePicker&&this.inpSdatePicker.destroy(),this.inpSdatePicker=new bulmaCalendar(document.getElementById("inpSdate_"+this.gcWidgetId),{startDate:new Date(Date.parse(this.selectedDate)),dateFormat:"yyyy-mm-dd",lang:this.currentLanguage,overlay:!1,closeOnOverlayClick:!0,closeOnSelect:!0,onSelect:function(e){var a=new Date(e.valueOf()+864e5);this.selectedDate=a.toISOString().split("T")[0]}.bind(this)}),console.debug(this.inpSdatePicker)},changeLanguage(){this.$i18n.locale=this.currentLanguage},removeFromArray:function(arry,value){let index=arry.indexOf(value);return index>-1&&arry.splice(index,1),arry},formatDecimal:function(decimal,numberOfDecimals){var factor=100;return isNaN(parseFloat(decimal))?NaN:(1==numberOfDecimals&&(factor=10),2==numberOfDecimals&&(factor=100),3==numberOfDecimals&&(factor=1e3),4==numberOfDecimals&&(factor=1e4),5==numberOfDecimals&&(factor=1e5),Math.ceil(decimal*factor)/factor)},capitalize:function(s){return"string"!=typeof s?"":s.charAt(0).toUpperCase()+s.slice(1)},isDateValid:function(date_str){return!isNaN(new Date(date_str))},loadJSscript:function(url,callback){let script=document.createElement("script");script.src=gcGetBaseURL()+"/"+url,script.async=!0,console.debug(script.src),document.body.appendChild(script),script.onload=function(){callback()}}},beforeDestroy:function(){window.removeEventListener("resize",this.triggerResize)}});